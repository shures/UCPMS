{"ast":null,"code":"var Config = {\n  maxBSYear: 2100,\n  minBSYear: 1970,\n  outputSeparator: \"-\",\n  bsMonthTotalDaysCount: [[30, 31], [31, 32], [31, 32], [31, 32], [31, 32], [30, 31], [29, 30], [29, 30], [29, 30], [29, 30], [29, 30], [30, 31]],\n  monthReferences: [[0, 1, 1, 22, 1, 3, 1, 1, 1, 3, 1, 22, 1, 3, 1, 3, 1, 22, 1, 3, 1, 19, 1, 3, 1, 1, 3, 1, 2, 2, 1, 3, 1], [1, 2, 2, 2, 2, 2, 2, 1, 3, 1, 3, 1, 2, 2, 2, 3, 2, 2, 2, 1, 3, 1, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 2, 2, 2, 2, 2, 1, 1, 1, 2, 2, 2, 2, 2, 1, 3, 1, 1, 2], [0, 1, 2, 1, 3, 1, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 3, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 3, 1, 1, 2], [1, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 2, 2, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 2, 2, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 1, 3, 2, 2, 1, 3, 1, 2, 2, 2, 1, 2], [59, 1, 26, 1, 28, 1, 2, 1, 12], [0, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 3, 1, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 5, 1, 1, 2, 2, 1, 3, 1, 2, 1, 2], [0, 12, 1, 3, 1, 3, 1, 5, 1, 11, 1, 3, 1, 3, 1, 18, 1, 3, 1, 3, 1, 18, 1, 3, 1, 3, 1, 27, 1, 2], [1, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 3, 1, 3, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2, 15, 2, 4], [0, 1, 2, 2, 2, 2, 1, 3, 1, 3, 1, 3, 1, 2, 2, 2, 3, 2, 2, 2, 1, 3, 1, 3, 1, 3, 1, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 3, 1, 3, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 3, 1, 2, 2, 2, 15, 2, 4], [1, 1, 3, 1, 3, 1, 14, 1, 3, 1, 1, 1, 3, 1, 14, 1, 3, 1, 3, 1, 3, 1, 18, 1, 3, 1, 3, 1, 3, 1, 14, 1, 3, 15, 1, 2, 1, 1], [0, 1, 1, 3, 1, 3, 1, 10, 1, 3, 1, 3, 1, 1, 1, 3, 1, 3, 1, 10, 1, 3, 1, 3, 1, 3, 1, 3, 1, 14, 1, 3, 1, 3, 1, 3, 1, 3, 1, 10, 1, 20, 1, 1, 1], [1, 2, 2, 1, 3, 1, 3, 1, 3, 1, 2, 2, 2, 2, 2, 3, 2, 2, 2, 2, 2, 1, 3, 1, 3, 1, 3, 1, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 3, 1, 3, 1, 3, 1, 2, 2, 2, 2, 2, 2, 2, 1, 3, 1, 3, 1, 20, 3]],\n  referenceDate: {\n    AD: \"1913-03-13\",\n    BS: \"1970-01-01\"\n  }\n};\n\nvar Validator = function () {\n  function Validator() {}\n\n  Validator.dateType = function (type) {\n    if (![\"BS\", \"AD\"].includes(type)) {\n      throw new TypeError(\"Invalid date type. Only 'AD' or 'BS' type supported.\");\n    }\n\n    return true;\n  };\n\n  Validator.adYear = function (year) {\n    var minAdYear = Config.minBSYear - 57;\n    var maxAdYear = Config.maxBSYear - 57;\n\n    if (year < minAdYear || year > maxAdYear) {\n      throw new RangeError(\"AD year should be in range of \" + minAdYear + \" to \" + maxAdYear);\n    }\n  };\n\n  Validator.adMonth = function (month) {\n    if (month < 1 || month > 12) {\n      throw new RangeError(\"AD month should be in range of 1 to 12\");\n    }\n  };\n\n  Validator.adDay = function (day) {\n    if (day < 1 || day > 31) {\n      throw new RangeError(\"AD day should be in range of 1 to 31\");\n    }\n  };\n\n  Validator.bsYear = function (year) {\n    var midBsYear = Config.minBSYear;\n    var maxBsYear = Config.maxBSYear;\n\n    if (year < midBsYear || year > maxBsYear) {\n      throw new RangeError(\"BS year should be in range of \" + midBsYear + \" to \" + maxBsYear);\n    }\n  };\n\n  Validator.bsMonth = function (month) {\n    if (month < 1 || month > 12) {\n      throw new RangeError(\"BS month should be in range of 1 to 12\");\n    }\n  };\n\n  Validator.bsDay = function (day) {\n    if (day < 1 || day > 32) {\n      throw new RangeError(\"BS day should be in range of 1 to 32\");\n    }\n  };\n\n  return Validator;\n}();\n\nvar BikramSambat = function () {\n  function BikramSambat(date, type) {\n    if (type === void 0) {\n      type = \"AD\";\n    }\n\n    this.dateType = \"AD\";\n    this.date = {\n      year: 0,\n      month: 0,\n      day: 0\n    };\n\n    if (date) {\n      this.setDate(date, type);\n    } else {\n      this.setDate(new Date());\n    }\n  }\n\n  BikramSambat.prototype.setDate = function (date, type) {\n    if (type === void 0) {\n      type = \"AD\";\n    }\n\n    Validator.dateType(type);\n\n    if (type === \"BS\") {\n      if (typeof date !== \"string\") {\n        throw new TypeError(\"BS date should be 'string' type.\");\n      }\n\n      this.dateType = \"BS\";\n      this.date = this.splitBsDate(date);\n      return this;\n    }\n\n    this.dateType = \"AD\";\n    this.date = this.splitAdDate(date);\n    return this;\n  };\n\n  BikramSambat.prototype.toAD = function () {\n    if (this.dateType === \"AD\") {\n      return this.format(this.date);\n    }\n\n    var totalDaysSince = this.totalDaysSince();\n\n    var _a = this.splitDate(Config.referenceDate.AD),\n        year = _a.year,\n        month = _a.month,\n        day = _a.day;\n\n    var adDate = new Date(year, month, day - 1);\n    adDate.setDate(adDate.getDate() + totalDaysSince);\n    return this.format(this.splitAdDate(adDate));\n  };\n\n  BikramSambat.prototype.toBS = function () {\n    if (this.dateType === \"BS\") {\n      return this.format(this.date);\n    }\n\n    var _a = this.date,\n        adYear = _a.year,\n        adMonth = _a.month,\n        adDay = _a.day;\n    var bsYear = adYear + 57;\n    var bsMonth = (adMonth + 9) % 12 || 12;\n    var bsDay = 1;\n\n    if (adMonth < 4) {\n      bsYear -= 1;\n    } else if (adMonth === 4) {\n      var bsNewYearAdDate = new BikramSambat(this.format({\n        year: bsYear,\n        month: 1,\n        day: 1\n      }), \"BS\").toAD();\n\n      if (adDay < new Date(bsNewYearAdDate).getDate()) {\n        bsYear -= 1;\n      }\n    }\n\n    var bsFirstDayOfMonthAdDate = new Date(new BikramSambat(this.format({\n      year: bsYear,\n      month: bsMonth,\n      day: 1\n    }), \"BS\").toAD());\n\n    if (adDay >= 1 && adDay < bsFirstDayOfMonthAdDate.getDate()) {\n      bsMonth = bsMonth !== 1 ? bsMonth - 1 : 12;\n      var daysInBSMonth = this.daysInBsMonth(bsYear, bsMonth);\n      bsDay = daysInBSMonth - (bsFirstDayOfMonthAdDate.getDate() - adDay) + 1;\n    } else {\n      bsDay = adDay - bsFirstDayOfMonthAdDate.getDate() + 1;\n    }\n\n    return this.format({\n      year: bsYear,\n      month: bsMonth,\n      day: bsDay\n    });\n  };\n  /**\r\n   * Calculate total number of days since minimum reference date\r\n   */\n\n\n  BikramSambat.prototype.totalDaysSince = function () {\n    var _a = this.date,\n        bsYear = _a.year,\n        bsMonth = _a.month,\n        bsDay = _a.day;\n    var totalDays = 0;\n    var diffInYears = bsYear - Config.minBSYear;\n\n    for (var i = 1; i <= 12; i++) {\n      totalDays += this.totalMonthDaysSince(i, i < bsMonth ? diffInYears + 1 : diffInYears);\n    }\n\n    if (bsYear > 2085 && bsYear < 2088) {\n      totalDays += bsDay - 2;\n    } else if (bsYear === 2085 && bsMonth > 5) {\n      totalDays += bsDay - 2;\n    } else if (bsYear > 2088) {\n      totalDays += bsDay - 4;\n    } else if (bsYear === 2088 && bsMonth > 5) {\n      totalDays += bsDay - 4;\n    } else {\n      totalDays += bsDay;\n    }\n\n    return totalDays;\n  };\n  /**\r\n   * Total number of bsMonth days since minimum reference date\r\n   * @param bsMonth\r\n   * @param diffInYear\r\n   */\n\n\n  BikramSambat.prototype.totalMonthDaysSince = function (bsMonth, diffInYear) {\n    if (diffInYear === 0) {\n      return 0;\n    }\n\n    var monthData = Config.monthReferences[bsMonth - 1];\n    var calculated = monthData.slice(0).reduce(function (total, monthDataItem, monthIndex, arr) {\n      if (monthDataItem === 0) {\n        return total;\n      }\n\n      var monthTotalDaysCountIndex = monthIndex % 2;\n\n      if (diffInYear > total.year + monthDataItem) {\n        total.year += monthDataItem;\n        total.month += Config.bsMonthTotalDaysCount[bsMonth - 1][monthTotalDaysCountIndex] * monthDataItem;\n      } else {\n        total.month += Config.bsMonthTotalDaysCount[bsMonth - 1][monthTotalDaysCountIndex] * (diffInYear - total.year);\n        total.year = diffInYear - total.year;\n        arr.splice(1); // break; dont forget slice(0) before reducing https://stackoverflow.com/questions/36144406/how-to-break-on-reduce-method\n      }\n\n      return total;\n    }, {\n      month: 0,\n      year: 0\n    });\n    return calculated.month;\n  }; // noinspection JSMethodCanBeStatic\n\n  /**\r\n   * Returns total number of days in bsMonth for bsYear\r\n   * @param bsYear\r\n   * @param bsMonth\r\n   */\n\n\n  BikramSambat.prototype.daysInBsMonth = function (bsYear, bsMonth) {\n    var totalYears = bsYear + 1 - Config.minBSYear;\n    var monthData = Config.monthReferences[bsMonth - 1];\n    var yearCount = 0;\n\n    for (var i = 0; i < monthData.length; i++) {\n      if (monthData[i] === 0) {\n        continue;\n      }\n\n      var monthTotalDaysCountIndex = i % 2;\n      yearCount += monthData[i];\n\n      if (totalYears <= yearCount) {\n        if (bsYear === 2085 && bsMonth === 5 || bsYear === 2088 && bsMonth === 5) {\n          return Config.bsMonthTotalDaysCount[bsMonth - 1][monthTotalDaysCountIndex] - 2;\n        } else {\n          return Config.bsMonthTotalDaysCount[bsMonth - 1][monthTotalDaysCountIndex];\n        }\n      }\n    }\n\n    return 0;\n  };\n\n  BikramSambat.prototype.splitDate = function (date) {\n    // tslint:disable-next-line:radix\n    var _a = date.replace(/\\//g, \"-\").split(\"-\").map(function (d) {\n      return Math.floor(Number(d));\n    }),\n        year = _a[0],\n        month = _a[1],\n        day = _a[2];\n\n    return {\n      year: year,\n      month: month,\n      day: day\n    };\n  }; // noinspection JSMethodCanBeStatic\n\n\n  BikramSambat.prototype.splitAdDate = function (date) {\n    if (typeof date === \"string\") {\n      date = new Date(date);\n    }\n\n    var year = date.getFullYear();\n    var month = date.getMonth() + 1;\n    var day = date.getDate();\n    Validator.adYear(year);\n    Validator.adMonth(month);\n    Validator.adDay(day);\n    return {\n      year: year,\n      month: month,\n      day: day\n    };\n  };\n\n  BikramSambat.prototype.splitBsDate = function (date) {\n    var _a = this.splitDate(date),\n        year = _a.year,\n        month = _a.month,\n        day = _a.day;\n\n    Validator.bsYear(year);\n    Validator.bsMonth(month);\n    Validator.bsDay(day);\n    return {\n      year: year,\n      month: month,\n      day: day\n    };\n  };\n\n  BikramSambat.prototype.format = function (date) {\n    var separator = Config.outputSeparator;\n    var year = date.year,\n        month = date.month,\n        day = date.day;\n    return \"\" + year + separator + this.zeroPad(month) + separator + this.zeroPad(day);\n  }; // noinspection JSMethodCanBeStatic\n\n\n  BikramSambat.prototype.zeroPad = function (x) {\n    return x > 9 ? \"\" + x : \"0\" + x;\n  };\n\n  return BikramSambat;\n}();\n\nvar BSToAD = function (date) {\n  return new BikramSambat().setDate(date, \"BS\").toAD();\n};\n\nvar ADToBS = function (date) {\n  return new BikramSambat().setDate(date, \"AD\").toBS();\n};\n\nexport default BikramSambat;\nexport { ADToBS, BSToAD };","map":{"version":3,"sources":["../src/Config.ts","../src/Validator.ts","../src/BikramSambat.ts","../src/Helper.ts"],"names":[],"mappings":"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","sourcesContent":["interface BikramSambatConfig {\n    minBSYear: number\n    maxBSYear: number\n\n    bsMonthTotalDaysCount: number[][]\n    monthReferences: number[][]\n    referenceDate: {\n        AD: string\n        BS: string\n    }\n\n    outputSeparator: string\n}\n\nconst Config: BikramSambatConfig = {\n    maxBSYear: 2100,\n    minBSYear: 1970,\n\n    outputSeparator: \"-\",\n\n    bsMonthTotalDaysCount: [\n        [30, 31],\n        [31, 32],\n        [31, 32],\n        [31, 32],\n        [31, 32],\n        [30, 31],\n        [29, 30],\n        [29, 30],\n        [29, 30],\n        [29, 30],\n        [29, 30],\n        [30, 31],\n    ],\n\n    monthReferences: [\n        [0, 1, 1, 22, 1, 3, 1, 1, 1, 3, 1, 22, 1, 3, 1, 3, 1, 22, 1, 3, 1, 19, 1, 3, 1, 1, 3, 1, 2, 2, 1, 3, 1],\n        [\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            3,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            1,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            1,\n            2,\n        ],\n        [\n            0,\n            1,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            3,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            1,\n            1,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            1,\n            2,\n        ],\n        [\n            1,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            2,\n            2,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            1,\n            2,\n        ],\n        [59, 1, 26, 1, 28, 1, 2, 1, 12],\n        [\n            0,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            5,\n            1,\n            1,\n            2,\n            2,\n            1,\n            3,\n            1,\n            2,\n            1,\n            2,\n        ],\n        [0, 12, 1, 3, 1, 3, 1, 5, 1, 11, 1, 3, 1, 3, 1, 18, 1, 3, 1, 3, 1, 18, 1, 3, 1, 3, 1, 27, 1, 2],\n        [\n            1,\n            2,\n            2,\n            2,\n            2,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            3,\n            1,\n            3,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            2,\n            2,\n            2,\n            15,\n            2,\n            4,\n        ],\n        [\n            0,\n            1,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            3,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            15,\n            2,\n            4,\n        ],\n        [\n            1,\n            1,\n            3,\n            1,\n            3,\n            1,\n            14,\n            1,\n            3,\n            1,\n            1,\n            1,\n            3,\n            1,\n            14,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            18,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            14,\n            1,\n            3,\n            15,\n            1,\n            2,\n            1,\n            1,\n        ],\n        [\n            0,\n            1,\n            1,\n            3,\n            1,\n            3,\n            1,\n            10,\n            1,\n            3,\n            1,\n            3,\n            1,\n            1,\n            1,\n            3,\n            1,\n            3,\n            1,\n            10,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            14,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            10,\n            1,\n            20,\n            1,\n            1,\n            1,\n        ],\n        [\n            1,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            3,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            3,\n            1,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            2,\n            1,\n            3,\n            1,\n            3,\n            1,\n            20,\n            3,\n        ],\n    ],\n\n    referenceDate: {\n        AD: \"1913-03-13\",\n        BS: \"1970-01-01\",\n    },\n}\n\nexport default Config\n","import Config from \"./Config\"\n\nexport default class Validator {\n    public static dateType(type: string): boolean {\n        if (![\"BS\", \"AD\"].includes(type)) {\n            throw new TypeError(\"Invalid date type. Only 'AD' or 'BS' type supported.\")\n        }\n\n        return true\n    }\n\n    public static adYear(year: number) {\n        const minAdYear = Config.minBSYear - 57\n        const maxAdYear = Config.maxBSYear - 57\n\n        if (year < minAdYear || year > maxAdYear) {\n            throw new RangeError(`AD year should be in range of ${minAdYear} to ${maxAdYear}`)\n        }\n    }\n\n    public static adMonth(month: number) {\n        if (month < 1 || month > 12) {\n            throw new RangeError(\"AD month should be in range of 1 to 12\")\n        }\n    }\n\n    public static adDay(day: number) {\n        if (day < 1 || day > 31) {\n            throw new RangeError(\"AD day should be in range of 1 to 31\")\n        }\n    }\n\n    public static bsYear(year: number) {\n        const midBsYear = Config.minBSYear\n        const maxBsYear = Config.maxBSYear\n\n        if (year < midBsYear || year > maxBsYear) {\n            throw new RangeError(`BS year should be in range of ${midBsYear} to ${maxBsYear}`)\n        }\n    }\n\n    public static bsMonth(month: number) {\n        if (month < 1 || month > 12) {\n            throw new RangeError(\"BS month should be in range of 1 to 12\")\n        }\n    }\n\n    public static bsDay(day: number) {\n        if (day < 1 || day > 32) {\n            throw new RangeError(\"BS day should be in range of 1 to 32\")\n        }\n    }\n}\n","import Config from \"./Config\"\nimport Validator from \"./Validator\"\n\ninterface DateObject {\n    year: number\n    month: number\n    day: number\n}\n\nexport default class BikramSambat {\n    private dateType: string = \"AD\"\n    private date: DateObject = { year: 0, month: 0, day: 0 }\n\n    constructor(date?: Date | string, type: string = \"AD\") {\n        if (date) {\n            this.setDate(date, type)\n        } else {\n            this.setDate(new Date())\n        }\n    }\n\n    public setDate(date: Date | string, type: string = \"AD\"): BikramSambat {\n        Validator.dateType(type)\n        if (type === \"BS\") {\n            if (typeof date !== \"string\") {\n                throw new TypeError(\"BS date should be 'string' type.\")\n            }\n\n            this.dateType = \"BS\"\n            this.date = this.splitBsDate(date)\n\n            return this\n        }\n\n        this.dateType = \"AD\"\n        this.date = this.splitAdDate(date)\n\n        return this\n    }\n\n    public toAD(): string {\n        if (this.dateType === \"AD\") {\n            return this.format(this.date)\n        }\n\n        const totalDaysSince = this.totalDaysSince()\n\n        const { year, month, day } = this.splitDate(Config.referenceDate.AD)\n        const adDate = new Date(year, month, day - 1)\n        adDate.setDate(adDate.getDate() + totalDaysSince)\n\n        return this.format(this.splitAdDate(adDate))\n    }\n\n    public toBS(): string {\n        if (this.dateType === \"BS\") {\n            return this.format(this.date)\n        }\n\n        const { year: adYear, month: adMonth, day: adDay } = this.date\n        let bsYear = adYear + 57\n        let bsMonth = (adMonth + 9) % 12 || 12\n        let bsDay = 1\n\n        if (adMonth < 4) {\n            bsYear -= 1\n        } else if (adMonth === 4) {\n            const bsNewYearAdDate = new BikramSambat(this.format({ year: bsYear, month: 1, day: 1 }), \"BS\").toAD()\n            if (adDay < new Date(bsNewYearAdDate).getDate()) {\n                bsYear -= 1\n            }\n        }\n\n        const bsFirstDayOfMonthAdDate = new Date(\n            new BikramSambat(this.format({ year: bsYear, month: bsMonth, day: 1 }), \"BS\").toAD(),\n        )\n        if (adDay >= 1 && adDay < bsFirstDayOfMonthAdDate.getDate()) {\n            bsMonth = bsMonth !== 1 ? bsMonth - 1 : 12\n            const daysInBSMonth = this.daysInBsMonth(bsYear, bsMonth)\n            bsDay = daysInBSMonth - (bsFirstDayOfMonthAdDate.getDate() - adDay) + 1\n        } else {\n            bsDay = adDay - bsFirstDayOfMonthAdDate.getDate() + 1\n        }\n\n        return this.format({ year: bsYear, month: bsMonth, day: bsDay })\n    }\n\n    /**\n     * Calculate total number of days since minimum reference date\n     */\n    private totalDaysSince(): number {\n        const { year: bsYear, month: bsMonth, day: bsDay } = this.date\n\n        let totalDays = 0\n        const diffInYears = bsYear - Config.minBSYear\n        for (let i = 1; i <= 12; i++) {\n            totalDays += this.totalMonthDaysSince(i, i < bsMonth ? diffInYears + 1 : diffInYears)\n        }\n\n        if (bsYear > 2085 && bsYear < 2088) {\n            totalDays += bsDay - 2\n        } else if (bsYear === 2085 && bsMonth > 5) {\n            totalDays += bsDay - 2\n        } else if (bsYear > 2088) {\n            totalDays += bsDay - 4\n        } else if (bsYear === 2088 && bsMonth > 5) {\n            totalDays += bsDay - 4\n        } else {\n            totalDays += bsDay\n        }\n\n        return totalDays\n    }\n\n    /**\n     * Total number of bsMonth days since minimum reference date\n     * @param bsMonth\n     * @param diffInYear\n     */\n    private totalMonthDaysSince(bsMonth: number, diffInYear: number): number {\n        if (diffInYear === 0) {\n            return 0\n        }\n\n        const monthData = Config.monthReferences[bsMonth - 1]\n\n        interface Total {\n            month: number\n            year: number\n        }\n\n        const calculated = monthData.slice(0).reduce(\n            (total: Total, monthDataItem: number, monthIndex, arr: number[]): Total => {\n                if (monthDataItem === 0) {\n                    return total\n                }\n\n                const monthTotalDaysCountIndex = monthIndex % 2\n                if (diffInYear > total.year + monthDataItem) {\n                    total.year += monthDataItem\n                    total.month += Config.bsMonthTotalDaysCount[bsMonth - 1][monthTotalDaysCountIndex] * monthDataItem\n                } else {\n                    total.month +=\n                        Config.bsMonthTotalDaysCount[bsMonth - 1][monthTotalDaysCountIndex] * (diffInYear - total.year)\n                    total.year = diffInYear - total.year\n                    arr.splice(1) // break; dont forget slice(0) before reducing https://stackoverflow.com/questions/36144406/how-to-break-on-reduce-method\n                }\n\n                return total\n            },\n            { month: 0, year: 0 },\n        )\n\n        return calculated.month\n    }\n\n    // noinspection JSMethodCanBeStatic\n    /**\n     * Returns total number of days in bsMonth for bsYear\n     * @param bsYear\n     * @param bsMonth\n     */\n    private daysInBsMonth(bsYear: number, bsMonth: number): number {\n        const totalYears = bsYear + 1 - Config.minBSYear\n        const monthData = Config.monthReferences[bsMonth - 1]\n\n        let yearCount = 0\n        for (let i = 0; i < monthData.length; i++) {\n            if (monthData[i] === 0) {\n                continue\n            }\n\n            const monthTotalDaysCountIndex = i % 2\n            yearCount += monthData[i]\n            if (totalYears <= yearCount) {\n                if ((bsYear === 2085 && bsMonth === 5) || (bsYear === 2088 && bsMonth === 5)) {\n                    return Config.bsMonthTotalDaysCount[bsMonth - 1][monthTotalDaysCountIndex] - 2\n                } else {\n                    return Config.bsMonthTotalDaysCount[bsMonth - 1][monthTotalDaysCountIndex]\n                }\n            }\n        }\n\n        return 0\n    }\n\n    private splitDate(date: string): DateObject {\n        // tslint:disable-next-line:radix\n        const [year, month, day]: number[] = date\n            .replace(/\\//g, \"-\")\n            .split(\"-\")\n            .map(d => Math.floor(Number(d)))\n\n        return { year, month, day }\n    }\n\n    // noinspection JSMethodCanBeStatic\n    private splitAdDate(date: Date | string): DateObject {\n        if (typeof date === \"string\") {\n            date = new Date(date)\n        }\n\n        const year: number = date.getFullYear()\n        const month: number = date.getMonth() + 1\n        const day: number = date.getDate()\n\n        Validator.adYear(year)\n        Validator.adMonth(month)\n        Validator.adDay(day)\n\n        return { year, month, day }\n    }\n\n    private splitBsDate(date: string): DateObject {\n        const { year, month, day } = this.splitDate(date)\n\n        Validator.bsYear(year)\n        Validator.bsMonth(month)\n        Validator.bsDay(day)\n\n        return { year, month, day }\n    }\n\n    private format(date: DateObject): string {\n        const separator: string = Config.outputSeparator\n        const { year, month, day } = date\n\n        return `${year}${separator}${this.zeroPad(month)}${separator}${this.zeroPad(day)}`\n    }\n\n    // noinspection JSMethodCanBeStatic\n    private zeroPad(x: number): string {\n        return x > 9 ? `${x}` : `0${x}`\n    }\n}\n","import BikramSambat from \"./BikramSambat\"\n\nexport const BSToAD = (date: string): string => {\n    return new BikramSambat().setDate(date, \"BS\").toAD()\n}\n\nexport const ADToBS = (date: Date | string): string => {\n    return new BikramSambat().setDate(date, \"AD\").toBS()\n}\n"]},"metadata":{},"sourceType":"module"}